name: Actualizar datos Movebank

on:
  schedule:
    - cron: '0 0 * * *' # Ejecuta el script todos los días a la medianoche UTC
  workflow_dispatch: # Permite ejecución manual

jobs:
  update-movebank:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4 # Usa la última versión disponible

    - name: Set up R
      uses: r-lib/actions/setup-r@v2

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libcurl4-openssl-dev libpng-dev gdal-bin libgdal-dev

    - name: Instalar paquetes R (solo si no están instalados)
      run: |
        Rscript -e 'if (!requireNamespace("pacman", quietly = TRUE)) install.packages("pacman")'
        Rscript -e 'pacman::p_load(dplyr, lubridate, move, leaflet, htmlwidgets, jsonlite, remotes)'
        Rscript -e 'if (!"move" %in% installed.packages()[,"Package"]) remotes::install_version("move", version = "4.0.6", repos = "http://cran.us.r-project.org")'

    - name: Verificar que los secretos se pasen correctamente
      run: |
        echo "Usuario: ${{ secrets.MOVEBANK_USER }}"
        echo "Longitud de la contraseña: ${#MOVEBANK_PASS}"
      shell: bash
      env:
        MOVEBANK_USER: ${{ secrets.MOVEBANK_USER }}
        MOVEBANK_PASS: ${{ secrets.MOVEBANK_PASS }}

    - name: Descargar datos de Movebank
      run: Rscript 00_Download_data_Movebank.R
      env:
        MOVEBANK_USER: ${{ secrets.MOVEBANK_USER }}
        MOVEBANK_PASS: ${{ secrets.MOVEBANK_PASS }}
    - name: Install pandoc
      run: sudo apt-get install -y pandoc 
      
    - name: Crear carpeta docs si no existe
      run: mkdir -p docs/

    - name: Generar mapa interactivo
      run: Rscript 01_Interactive_map.R
      
    - name: Subir cambios a GitHub
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "actions@github.com"
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/BioChess/Interactive_map_web.git
        
        # Guardar temporalmente cambios locales para evitar conflictos
        git stash

        # Obtener los últimos cambios del repo remoto
        git pull origin main --rebase

        # Restaurar los cambios locales
        git stash pop || echo "No hay cambios guardados en stash"

        # Agregar los archivos modificados
        git add gps_data.csv gps_data.json docs/mapa_interactivo.html
        
        # Si hay cambios, hacer commit
        git diff --quiet && git diff --staged --quiet || git commit -m "Actualización automática de datos Movebank y mapa interactivo"
        
        # Hacer push al repositorio
        git push origin main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}






